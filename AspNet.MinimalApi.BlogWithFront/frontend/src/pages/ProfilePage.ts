import { BaseComponent } from '../components/BaseComponent';

/**
 * –°—Ç–æ—Ä—ñ–Ω–∫–∞ –ø—Ä–æ—Ñ—ñ–ª—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
export class ProfilePage extends BaseComponent {
  private twoFactorEnabled = false;

  constructor() {
    super();
  }

  protected render(): void {
    console.log('ProfilePage render –≤–∏–∫–ª–∏–∫–∞–Ω–æ');
    this.shadow.innerHTML = '';
    
    // –î–æ–¥–∞—î–º–æ —Å—Ç–∏–ª—ñ
    const styles = this.createStyles(`
      :host {
        display: block;
        padding: 2rem;
      }

      .container {
        max-width: 800px;
        margin: 0 auto;
      }

      .profile-header {
        background: white;
        padding: 2rem;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        margin-bottom: 2rem;
        text-align: center;
      }

      .avatar {
        width: 100px;
        height: 100px;
        border-radius: 50%;
        background: #007bff;
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 2rem;
        margin: 0 auto 1rem;
      }

      .profile-name {
        font-size: 1.5rem;
        font-weight: bold;
        color: #333;
        margin: 0 0 0.5rem;
      }

      .profile-email {
        color: #666;
        margin: 0;
      }

      .profile-section {
        background: white;
        padding: 2rem;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        margin-bottom: 2rem;
      }

      .section-title {
        font-size: 1.25rem;
        font-weight: bold;
        color: #333;
        margin: 0 0 1rem;
        padding-bottom: 0.5rem;
        border-bottom: 1px solid #e9ecef;
      }

      .form-group {
        margin-bottom: 1rem;
      }

      label {
        display: block;
        margin-bottom: 0.5rem;
        font-weight: 500;
        color: #333;
      }

      input {
        width: 100%;
        padding: 0.75rem;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 1rem;
        box-sizing: border-box;
      }

      input:focus {
        outline: none;
        border-color: #007bff;
        box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);
      }

      .btn {
        padding: 0.75rem 1.5rem;
        border: none;
        border-radius: 4px;
        font-size: 1rem;
        cursor: pointer;
        margin-right: 0.5rem;
        margin-bottom: 0.5rem;
      }

      .btn-primary {
        background: #007bff;
        color: white;
      }

      .btn-primary:hover {
        background: #0056b3;
      }

      .btn-success {
        background: #28a745;
        color: white;
      }

      .btn-success:hover {
        background: #218838;
      }

      .btn-danger {
        background: #dc3545;
        color: white;
      }

      .btn-danger:hover {
        background: #c82333;
      }

      .security-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem;
        border: 1px solid #e9ecef;
        border-radius: 4px;
        margin-bottom: 1rem;
      }

      .security-info {
        flex: 1;
      }

      .security-title {
        font-weight: 500;
        color: #333;
        margin: 0 0 0.25rem;
      }

      .security-description {
        color: #666;
        font-size: 0.875rem;
        margin: 0;
      }

      .status-badge {
        padding: 0.25rem 0.75rem;
        border-radius: 12px;
        font-size: 0.875rem;
        font-weight: 500;
        margin-right: 1rem;
      }

      .status-enabled {
        background: #d4edda;
        color: #155724;
      }

      .status-disabled {
        background: #f8d7da;
        color: #721c24;
      }

      .qr-code {
        text-align: center;
        padding: 2rem;
        background: #f8f9fa;
        border-radius: 4px;
        margin: 1rem 0;
      }

      .qr-placeholder {
        width: 200px;
        height: 200px;
        background: white;
        border: 2px dashed #ddd;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 1rem;
        color: #666;
      }

      .manual-key {
        background: #f8f9fa;
        padding: 0.75rem;
        border-radius: 4px;
        font-family: monospace;
        word-break: break-all;
        margin: 1rem 0;
      }
    `);

    // –°—Ç–≤–æ—Ä—é—î–º–æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    const container = this.createElement('div', '', 'container');
    
    // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–æ—Ñ—ñ–ª—é
    const header = this.createElement('div', '', 'profile-header');
    header.innerHTML = `
      <div class="avatar">üë§</div>
      <h1 class="profile-name">–¢–µ—Å—Ç–æ–≤–∏–π –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á</h1>
      <p class="profile-email">test@example.com</p>
    `;
    
    // –°–µ–∫—Ü—ñ—è –æ—Å–æ–±–∏—Å—Ç–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó
    const personalSection = this.createElement('div', '', 'profile-section');
    personalSection.innerHTML = `
      <h2 class="section-title">–û—Å–æ–±–∏—Å—Ç–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è</h2>
      <form id="personal-form">
        <div class="form-group">
          <label for="name">–Ü–º'—è</label>
          <input type="text" id="name" name="name" value="–¢–µ—Å—Ç–æ–≤–∏–π –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á">
        </div>
        
        <div class="form-group">
          <label for="email">Email</label>
          <input type="email" id="email" name="email" value="test@example.com" readonly>
        </div>
        
        <button type="submit" class="btn btn-primary">–ó–±–µ—Ä–µ–≥—Ç–∏ –∑–º—ñ–Ω–∏</button>
      </form>
    `;
    
    // –°–µ–∫—Ü—ñ—è –±–µ–∑–ø–µ–∫–∏
    const securitySection = this.createElement('div', '', 'profile-section');
    securitySection.innerHTML = `
      <h2 class="section-title">–ë–µ–∑–ø–µ–∫–∞</h2>
      
      <div class="security-item">
        <div class="security-info">
          <div class="security-title">–ó–º—ñ–Ω–∞ –ø–∞—Ä–æ–ª—è</div>
          <div class="security-description">–û–Ω–æ–≤—ñ—Ç—å —Å–≤—ñ–π –ø–∞—Ä–æ–ª—å –¥–ª—è –ø—ñ–¥–≤–∏—â–µ–Ω–Ω—è –±–µ–∑–ø–µ–∫–∏</div>
        </div>
        <button class="btn btn-primary" id="change-password-btn">–ó–º—ñ–Ω–∏—Ç–∏ –ø–∞—Ä–æ–ª—å</button>
      </div>
      
      <div class="security-item">
        <div class="security-info">
          <div class="security-title">–î–≤–æ—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è</div>
          <div class="security-description">–î–æ–¥–∞—Ç–∫–æ–≤–∏–π —Ä—ñ–≤–µ–Ω—å –∑–∞—Ö–∏—Å—Ç—É –¥–ª—è –≤–∞—à–æ–≥–æ –∞–∫–∞—É–Ω—Ç—É</div>
        </div>
        <span class="status-badge ${this.twoFactorEnabled ? 'status-enabled' : 'status-disabled'}">
          ${this.twoFactorEnabled ? '–£–≤—ñ–º–∫–Ω–µ–Ω–æ' : '–í–∏–º–∫–Ω–µ–Ω–æ'}
        </span>
        <button class="btn ${this.twoFactorEnabled ? 'btn-danger' : 'btn-success'}" id="toggle-2fa-btn">
          ${this.twoFactorEnabled ? '–í–∏–º–∫–Ω—É—Ç–∏' : '–£–≤—ñ–º–∫–Ω—É—Ç–∏'}
        </button>
      </div>
      
      <div id="2fa-setup" style="display: ${this.twoFactorEnabled ? 'none' : 'none'};">
        <div class="qr-code">
          <h4>–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–≤–æ—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–æ—ó –∞—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó</h4>
          <div class="qr-placeholder">QR –∫–æ–¥ –±—É–¥–µ —Ç—É—Ç</div>
          <p>–ê–±–æ –≤–≤–µ–¥—ñ—Ç—å —Ü–µ–π –∫–ª—é—á –≤—Ä—É—á–Ω—É:</p>
          <div class="manual-key">ABCD EFGH IJKL MNOP QRST UVWX YZ12 3456</div>
          
          <div class="form-group">
            <label for="verification-code">–ö–æ–¥ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è</label>
            <input type="text" id="verification-code" placeholder="000000" maxlength="6">
          </div>
          
          <button class="btn btn-success" id="verify-2fa-btn">–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏</button>
          <button class="btn btn-secondary" id="cancel-2fa-btn">–°–∫–∞—Å—É–≤–∞—Ç–∏</button>
        </div>
      </div>
    `;

    container.appendChild(header);
    container.appendChild(personalSection);
    container.appendChild(securitySection);

    this.shadow.appendChild(styles);
    this.shadow.appendChild(container);
    
    console.log('ProfilePage render –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
  }

  protected setupEventListeners(): void {
    // –û–±—Ä–æ–±–∫–∞ —Ñ–æ—Ä–º–∏ –æ—Å–æ–±–∏—Å—Ç–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó
    this.shadow.addEventListener('submit', (event) => {
      if ((event.target as HTMLElement).id === 'personal-form') {
        event.preventDefault();
        console.log('–ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –æ—Å–æ–±–∏—Å—Ç–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó');
        alert('–û—Å–æ–±–∏—Å—Ç–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –∑–±–µ—Ä–µ–∂–µ–Ω–∞!');
      }
    });

    // –û–±—Ä–æ–±–∫–∞ –∫–ª—ñ–∫—ñ–≤
    this.shadow.addEventListener('click', (event) => {
      const target = event.target as HTMLElement;
      
      if (target.id === 'change-password-btn') {
        console.log('–ó–º—ñ–Ω–∞ –ø–∞—Ä–æ–ª—è');
        alert('–§—É–Ω–∫—Ü—ñ—è –∑–º—ñ–Ω–∏ –ø–∞—Ä–æ–ª—è –±—É–¥–µ —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞ –ø—ñ–∑–Ω—ñ—à–µ');
      } else if (target.id === 'toggle-2fa-btn') {
        this.toggle2FA();
      } else if (target.id === 'verify-2fa-btn') {
        this.verify2FA();
      } else if (target.id === 'cancel-2fa-btn') {
        this.cancel2FASetup();
      }
    });
  }

  /**
   * –ü–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è –¥–≤–æ—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–æ—ó –∞—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
   */
  private toggle2FA(): void {
    if (this.twoFactorEnabled) {
      // –í–∏–º–∫–Ω—É—Ç–∏ 2FA
      if (confirm('–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–º–∫–Ω—É—Ç–∏ –¥–≤–æ—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω—É –∞—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—é?')) {
        this.twoFactorEnabled = false;
        this.render();
        alert('–î–≤–æ—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è –≤–∏–º–∫–Ω–µ–Ω–∞');
      }
    } else {
      // –£–≤—ñ–º–∫–Ω—É—Ç–∏ 2FA - –ø–æ–∫–∞–∑–∞—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
      const setupDiv = this.shadowQuery('#2fa-setup') as HTMLElement;
      if (setupDiv) {
        setupDiv.style.display = 'block';
      }
    }
  }

  /**
   * –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è 2FA
   */
  private verify2FA(): void {
    const codeInput = this.shadowQuery('#verification-code') as HTMLInputElement;
    const code = codeInput?.value;
    
    if (!code || code.length !== 6) {
      alert('–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å 6-–∑–Ω–∞—á–Ω–∏–π –∫–æ–¥');
      return;
    }
    
    // –¢—É—Ç –±—É–¥–µ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–¥—É
    console.log('–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–¥—É 2FA:', code);
    
    // –°–∏–º—É–ª—è—Ü—ñ—è —É—Å–ø—ñ—à–Ω–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
    this.twoFactorEnabled = true;
    this.render();
    alert('–î–≤–æ—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–æ —É–≤—ñ–º–∫–Ω–µ–Ω–∞!');
  }

  /**
   * –°–∫–∞—Å—É–≤–∞–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è 2FA
   */
  private cancel2FASetup(): void {
    const setupDiv = this.shadowQuery('#2fa-setup') as HTMLElement;
    if (setupDiv) {
      setupDiv.style.display = 'none';
    }
  }
}

// –†–µ—î—Å—Ç—Ä—É—î–º–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
customElements.define('profile-page', ProfilePage);
