import { BaseComponent } from '../components/BaseComponent';

/**
 * –°—Ç–æ—Ä—ñ–Ω–∫–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è email (—Å–ø—Ä–æ—â–µ–Ω–∞ –≤–µ—Ä—Å—ñ—è)
 */
export class ConfirmEmailPage extends BaseComponent {
  constructor() {
    super();
  }

  protected render(): void {
    console.log('ConfirmEmailPage render –≤–∏–∫–ª–∏–∫–∞–Ω–æ');
    this.shadow.innerHTML = '';
    
    // –î–æ–¥–∞—î–º–æ —Å—Ç–∏–ª—ñ
    const styles = this.createStyles(`
      :host {
        display: block;
        padding: 2rem;
      }

      .container {
        max-width: 500px;
        margin: 0 auto;
        background: white;
        padding: 2rem;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        text-align: center;
      }

      .icon {
        font-size: 4rem;
        margin-bottom: 1rem;
      }

      h1 {
        color: #333;
        margin: 0 0 1rem;
      }

      .subtitle {
        color: #666;
        margin: 0 0 2rem;
        line-height: 1.6;
      }

      .email-highlight {
        color: #007bff;
        font-weight: 500;
      }

      .instructions {
        background: #f8f9fa;
        border: 1px solid #e9ecef;
        border-radius: 4px;
        padding: 1rem;
        margin: 1rem 0;
        text-align: left;
      }

      .instructions h4 {
        margin: 0 0 0.5rem;
        color: #333;
      }

      .instructions ul {
        margin: 0.5rem 0 0;
        padding-left: 1.25rem;
      }

      .instructions li {
        margin-bottom: 0.25rem;
        color: #666;
      }

      .btn {
        padding: 0.75rem 1.5rem;
        background: #007bff;
        color: white;
        border: none;
        border-radius: 4px;
        font-size: 1rem;
        cursor: pointer;
        text-decoration: none;
        display: inline-block;
        margin: 0.5rem;
      }

      .btn:hover {
        background: #0056b3;
      }

      .btn-secondary {
        background: #6c757d;
      }

      .btn-secondary:hover {
        background: #545b62;
      }

      .success-message {
        background: #d4edda;
        color: #155724;
        padding: 1rem;
        border-radius: 4px;
        margin: 1rem 0;
        border: 1px solid #c3e6cb;
      }

      .countdown {
        color: #007bff;
        font-weight: 500;
        margin-top: 1rem;
      }
    `);

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î —Ç–æ–∫–µ–Ω –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤ URL
    const urlParams = new URLSearchParams(window.location.search);
    const token = urlParams.get('token');
    const userId = urlParams.get('userId');

    // –°—Ç–≤–æ—Ä—é—î–º–æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    const container = this.createElement('div', '', 'container');
    
    if (token && userId) {
      // –ü–æ–∫–∞–∑—É—î–º–æ —É—Å–ø—ñ—à–Ω–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
      container.innerHTML = `
        <div class="icon">‚úÖ</div>
        <h1>Email –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ!</h1>
        <div class="success-message">
          –í–∞—à email —É—Å–ø—ñ—à–Ω–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ! –¢–µ–ø–µ—Ä –≤–∏ –º–æ–∂–µ—Ç–µ —É–≤—ñ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É.
        </div>
        <a href="/login" class="btn">–£–≤—ñ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É</a>
      `;
    } else {
      // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
      container.innerHTML = `
        <div class="icon">üìß</div>
        <h1>–ü—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å —Å–≤—ñ–π email</h1>
        <p class="subtitle">
          –ú–∏ –Ω–∞–¥—ñ—Å–ª–∞–ª–∏ –ª–∏—Å—Ç –∑ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è–º –Ω–∞ –≤–∞—à—É –ø–æ—à—Ç—É
        </p>
        
        <div class="instructions">
          <h4>–©–æ —Ä–æ–±–∏—Ç–∏ –¥–∞–ª—ñ:</h4>
          <ul>
            <li>–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Å–≤–æ—é –ø–æ—à—Ç–æ–≤—É —Å–∫—Ä–∏–Ω—å–∫—É</li>
            <li>–ó–Ω–∞–π–¥—ñ—Ç—å –ª–∏—Å—Ç –≤—ñ–¥ –Ω–∞—à–æ–≥–æ —Å–µ—Ä–≤—ñ—Å—É</li>
            <li>–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è</li>
            <li>–Ø–∫—â–æ –ª–∏—Å—Ç–∞ –Ω–µ–º–∞—î, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø–∞–ø–∫—É "–°–ø–∞–º"</li>
          </ul>
        </div>
        
        <button class="btn" id="resend-btn">–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ</button>
        <a href="/login" class="btn btn-secondary">–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –≤—Ö–æ–¥—É</a>
        
        <div class="countdown" id="countdown" style="display: none;"></div>
      `;
    }

    this.shadow.appendChild(styles);
    this.shadow.appendChild(container);
    
    console.log('ConfirmEmailPage render –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
  }

  protected setupEventListeners(): void {
    // –û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–∫–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è
    this.shadow.addEventListener('click', (event) => {
      const target = event.target as HTMLElement;
      
      if (target.id === 'resend-btn') {
        console.log('–ü–æ–≤—Ç–æ—Ä–Ω–µ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ª–∏—Å—Ç–∞');
        
        // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        const container = this.shadowQuery('.container');
        if (container) {
          const successDiv = document.createElement('div');
          successDiv.className = 'success-message';
          successDiv.innerHTML = 'üìß –õ–∏—Å—Ç –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ! –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Å–≤–æ—é –ø–æ—à—Ç—É.';
          container.insertBefore(successDiv, container.firstChild);
          
          // –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ç–∞–π–º–µ—Ä
          this.startCountdown();
          
          // –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
          setTimeout(() => {
            if (successDiv.parentNode) {
              successDiv.parentNode.removeChild(successDiv);
            }
          }, 5000);
        }
      }
    });
  }

  /**
   * –ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è
   */
  private startCountdown(): void {
    const resendBtn = this.shadowQuery('#resend-btn') as HTMLButtonElement;
    const countdownDiv = this.shadowQuery('#countdown') as HTMLElement;
    
    if (!resendBtn || !countdownDiv) return;
    
    let seconds = 60;
    resendBtn.disabled = true;
    resendBtn.textContent = '–ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è...';
    countdownDiv.style.display = 'block';
    
    const interval = setInterval(() => {
      countdownDiv.textContent = `–ü–æ–≤—Ç–æ—Ä–Ω–µ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –±—É–¥–µ –¥–æ—Å—Ç—É–ø–Ω–µ —á–µ—Ä–µ–∑ ${seconds} —Å–µ–∫—É–Ω–¥`;
      seconds--;
      
      if (seconds < 0) {
        clearInterval(interval);
        resendBtn.disabled = false;
        resendBtn.textContent = '–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ';
        countdownDiv.style.display = 'none';
      }
    }, 1000);
  }
}

// –†–µ—î—Å—Ç—Ä—É—î–º–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
customElements.define('confirm-email-page', ConfirmEmailPage);
