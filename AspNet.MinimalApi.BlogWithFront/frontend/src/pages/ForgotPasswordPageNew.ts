import { BaseComponent } from '../components/BaseComponent';

/**
 * –°—Ç–æ—Ä—ñ–Ω–∫–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è (—Å–ø—Ä–æ—â–µ–Ω–∞ –≤–µ—Ä—Å—ñ—è)
 */
export class ForgotPasswordPage extends BaseComponent {
  private emailSent = false;

  constructor() {
    super();
  }

  protected render(): void {
    console.log('ForgotPasswordPage render –≤–∏–∫–ª–∏–∫–∞–Ω–æ');
    this.shadow.innerHTML = '';
    
    // –î–æ–¥–∞—î–º–æ —Å—Ç–∏–ª—ñ
    const styles = this.createStyles(`
      :host {
        display: block;
        padding: 2rem;
      }

      .container {
        max-width: 400px;
        margin: 0 auto;
        background: white;
        padding: 2rem;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
      }

      h1 {
        text-align: center;
        color: #333;
        margin: 0 0 1rem;
      }

      .subtitle {
        text-align: center;
        color: #666;
        margin: 0 0 2rem;
        line-height: 1.5;
      }

      .form-group {
        margin-bottom: 1rem;
      }

      label {
        display: block;
        margin-bottom: 0.5rem;
        font-weight: 500;
        color: #333;
      }

      input {
        width: 100%;
        padding: 0.75rem;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 1rem;
        box-sizing: border-box;
      }

      input:focus {
        outline: none;
        border-color: #007bff;
        box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);
      }

      .btn {
        width: 100%;
        padding: 0.75rem;
        background: #007bff;
        color: white;
        border: none;
        border-radius: 4px;
        font-size: 1rem;
        cursor: pointer;
        margin-top: 1rem;
      }

      .btn:hover {
        background: #0056b3;
      }

      .links {
        text-align: center;
        margin-top: 1.5rem;
      }

      .links a {
        color: #007bff;
        text-decoration: none;
        margin: 0 0.5rem;
      }

      .links a:hover {
        text-decoration: underline;
      }

      .success-content {
        text-align: center;
      }

      .success-icon {
        font-size: 3rem;
        margin-bottom: 1rem;
      }

      .email-highlight {
        color: #007bff;
        font-weight: 500;
      }

      .instructions {
        background: #f8f9fa;
        border: 1px solid #e9ecef;
        border-radius: 4px;
        padding: 1rem;
        margin: 1rem 0;
        text-align: left;
      }

      .instructions h4 {
        margin: 0 0 0.5rem;
        color: #333;
      }

      .instructions ul {
        margin: 0.5rem 0 0;
        padding-left: 1.25rem;
      }

      .instructions li {
        margin-bottom: 0.25rem;
        color: #666;
      }
    `);

    // –°—Ç–≤–æ—Ä—é—î–º–æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    const container = this.createElement('div', '', 'container');
    
    if (this.emailSent) {
      // –°—Ç–∞–Ω –ø—ñ—Å–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è email
      container.innerHTML = `
        <div class="success-content">
          <div class="success-icon">üìß</div>
          <h1>–õ–∏—Å—Ç –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ!</h1>
          <p class="subtitle">
            –ú–∏ –Ω–∞–¥—ñ—Å–ª–∞–ª–∏ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó –¥–ª—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è –Ω–∞ –≤–∞—à—É email –∞–¥—Ä–µ—Å—É
          </p>
          
          <div class="instructions">
            <h4>–©–æ —Ä–æ–±–∏—Ç–∏ –¥–∞–ª—ñ:</h4>
            <ul>
              <li>–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Å–≤–æ—é –ø–æ—à—Ç–æ–≤—É —Å–∫—Ä–∏–Ω—å–∫—É</li>
              <li>–ó–Ω–∞–π–¥—ñ—Ç—å –ª–∏—Å—Ç –∑ —Ç–µ–º–æ—é "–í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è"</li>
              <li>–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –≤ –ª–∏—Å—Ç—ñ</li>
              <li>–°—Ç–≤–æ—Ä—ñ—Ç—å –Ω–æ–≤–∏–π –ø–∞—Ä–æ–ª—å</li>
              <li>–Ø–∫—â–æ –ª–∏—Å—Ç–∞ –Ω–µ–º–∞—î, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø–∞–ø–∫—É "–°–ø–∞–º"</li>
            </ul>
          </div>
          
          <div class="links">
            <a href="/login">–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –≤—Ö–æ–¥—É</a>
          </div>
        </div>
      `;
    } else {
      // –ü–æ—á–∞—Ç–∫–æ–≤–∞ —Ñ–æ—Ä–º–∞
      container.innerHTML = `
        <h1>üîë –ó–∞–±—É–ª–∏ –ø–∞—Ä–æ–ª—å?</h1>
        <p class="subtitle">
          –í–≤–µ–¥—ñ—Ç—å —Å–≤–æ—é email –∞–¥—Ä–µ—Å—É —ñ –º–∏ –Ω–∞–¥—ñ—à–ª–µ–º–æ –≤–∞–º —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó –¥–ª—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è
        </p>
        
        <form id="forgot-form">
          <div class="form-group">
            <label for="email">Email –∞–¥—Ä–µ—Å–∞</label>
            <input type="email" id="email" name="email" placeholder="your@email.com" required>
          </div>
          
          <button type="submit" class="btn">–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó</button>
        </form>
        
        <div class="links">
          <a href="/login">‚Üê –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –≤—Ö–æ–¥—É</a>
          <br><br>
          <span>–ù–µ–º–∞—î –∞–∫–∞—É–Ω—Ç—É? </span>
          <a href="/register">–ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è</a>
        </div>
      `;
    }

    this.shadow.appendChild(styles);
    this.shadow.appendChild(container);
    
    console.log('ForgotPasswordPage render –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
  }

  protected setupEventListeners(): void {
    if (!this.emailSent) {
      // –û–±—Ä–æ–±–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º–∏
      this.shadow.addEventListener('submit', (event) => {
        event.preventDefault();
        console.log('–§–æ—Ä–º–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞');
        
        const form = event.target as HTMLFormElement;
        const formData = new FormData(form);
        const email = formData.get('email') as string;
        
        console.log('Email:', email);
        
        // –í–∞–ª—ñ–¥–∞—Ü—ñ—è email
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(email)) {
          alert('–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω—É email –∞–¥—Ä–µ—Å—É');
          return;
        }
        
        // –ó–º—ñ–Ω—é—î–º–æ —Å—Ç–∞–Ω –Ω–∞ "–ª–∏—Å—Ç –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ"
        this.emailSent = true;
        this.render();
      });
    }
  }
}

// –†–µ—î—Å—Ç—Ä—É—î–º–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
customElements.define('forgot-password-page', ForgotPasswordPage);
